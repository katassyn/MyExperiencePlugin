name: MyExperiencePlugin
version: '${project.version}'
main: com.maks.myexperienceplugin.MyExperiencePlugin
api-version: '1.20'
commands:
  exp:
    description: Wyświetla poziom i doświadczenie gracza.
  exp_table:
    description: "Reloads the experience table"
    usage: "/exp_table reload"
    permission: "myplugin.exp_table.reload"
    permission-message: "You don't have permission to use this command!"
  top:
    description: "Displays the top 10 players by level."
    usage: "/top"
  exp_money:
    description: "Reloads the exp_money configuration."
    usage: "/exp_money reload"
    permission: "myplugin.exp_money.reload"
    permission-message: "You don't have permission to use this command!"
  party:
    description: Manage your party
    usage: /party < inv | accept | decline | leave | info > [player]
  get_lvl:
    description: Set the level and XP of the player.
    usage: /get_lvl <level>
    permission: "myplugin.exp_money.reload"
    permission-message: "You don't have permission to use this command!"
  exp_give:
    description: Give XP to a player.
    usage: /exp_give <amount> <player>
    permission: "myplugin.exp_money.reload"
    permission-message: "You don't have permission to use this command!"
  exp_give_p:
    description: Give a percentage of required XP to a player.
    usage: /exp_give_p <percentage> <player>
    permission: "myplugin.exp_money.reload"
    permission-message: "You don't have permission to use this command!"
  bonus_exp:
    description: Manages the Bonus XP event.
    usage: /bonus_exp <enable|disable|set> [value]
    permission: myplugin.bonusexp
  reload_bonus:
    description: Reloads the Bonus XP configuration.
    usage: /reload_bonus
    permission: myplugin.reloadbonus
  skilltree:
    description: Opens the skill tree GUI or info
    usage: /skilltree
    permission: myplugin.skilltree
  class:
    description: Force-change your class (OP-only)
    permission: myplugin.class
    usage: /class
  chose_class:
    description: Manually open the base class GUI
    permission: myplugin.class
    usage: /chose_class
  chose_ascendancy:
    description: Manually open the ascendancy GUI
    permission: myplugin.class
    usage: /chose_ascendancy
  alchemy_reset:
    description: Reset all alchemy effects and cooldowns
    usage: /alchemy_reset [player]
    permission: myplugin.alchemy.reset
    aliases: [ alch_reset, areset ]
  permissions:
    myplugin.alchemy.reset:
      description: Allows resetting alchemy effects and cooldowns
      default: op
  skillstats:
    description: Check your skill stats and effects
    usage: /skillstats
    aliases: [ stats ]

  skilltree2:
    description: Open the ascendancy skill tree
    usage: /skilltree2
    aliases: [ st2, asctree ]

  playerattributes:
    description: Shows all player attributes and skill bonuses
    usage: /playerattributes
    aliases: [pattr, attributes]
    permission: myplugin.playerattributes

  resetattributes:
    description: Resets player attributes to default values
    usage: /resetattributes [player] [all|vanilla]
    aliases: [resetattr, attreset]
    permission: myplugin.resetattributes

# Add these permissions to your plugin.yml (if you have a permissions section)

permissions:
  myplugin.playerattributes:
    description: Allows checking player attributes
    default: true

  myplugin.resetattributes:
    description: Allows resetting own attributes
    default: op

  myplugin.resetattributes.others:
    description: Allows resetting other players' attributes
    default: op
